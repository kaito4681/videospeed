name: Build and Release

on:
  # 手動実行を可能にする
  workflow_dispatch:
    inputs:
      create_release:
        description: 'Create a new release'
        required: false
        default: true
        type: boolean
  
  # fork元（upstream）の更新を検知
  schedule:
    # 毎日UTC 00:00に実行（日本時間 09:00）
    - cron: '0 0 * * *'
  
  # プッシュ時も実行（タグプッシュ時）
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  actions: read

env:
  NODE_VERSION: '18'

jobs:
  check-upstream:
    name: Check for upstream updates
    runs-on: ubuntu-latest
    outputs:
      should_build: ${{ steps.check.outputs.should_build }}
      upstream_version: ${{ steps.check.outputs.upstream_version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Add upstream remote
        run: |
          git remote add upstream https://github.com/igrigorik/videospeed.git || true
          git fetch upstream master
      
      - name: Check for updates
        id: check
        run: |
          # 手動実行の場合は常にビルド
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "should_build=true" >> $GITHUB_OUTPUT
            echo "upstream_version=manual-$(date +%Y%m%d-%H%M%S)" >> $GITHUB_OUTPUT
            exit 0
          fi
          
          # タグプッシュの場合は常にビルド
          if [ "${{ github.event_name }}" = "push" ] && [[ "${{ github.ref }}" == refs/tags/* ]]; then
            TAG_NAME=${GITHUB_REF#refs/tags/}
            echo "should_build=true" >> $GITHUB_OUTPUT
            echo "upstream_version=$TAG_NAME" >> $GITHUB_OUTPUT
            exit 0
          fi
          
          # upstream/masterの最新コミットハッシュを取得
          UPSTREAM_HASH=$(git rev-parse upstream/master)
          CURRENT_HASH=$(git rev-parse HEAD)
          
          echo "Upstream hash: $UPSTREAM_HASH"
          echo "Current hash: $CURRENT_HASH"
          
          # ハッシュが異なる場合、または前回のビルドから24時間以上経過している場合
          if [ "$UPSTREAM_HASH" != "$CURRENT_HASH" ]; then
            echo "should_build=true" >> $GITHUB_OUTPUT
            # upstream の manifest.json からバージョンを取得
            git show upstream/master:manifest.json > /tmp/upstream_manifest.json
            UPSTREAM_VERSION=$(grep '"version"' /tmp/upstream_manifest.json | sed 's/.*"version": *"\([^"]*\)".*/\1/')
            echo "upstream_version=v$UPSTREAM_VERSION-$(date +%Y%m%d)" >> $GITHUB_OUTPUT
          else
            echo "should_build=false" >> $GITHUB_OUTPUT
          fi

  build-and-release:
    name: Build and Release Extensions
    runs-on: ubuntu-latest
    needs: check-upstream
    if: needs.check-upstream.outputs.should_build == 'true'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Merge upstream changes (if needed)
        run: |
          if [ "${{ github.event_name }}" = "schedule" ]; then
            git remote add upstream https://github.com/igrigorik/videospeed.git || true
            git fetch upstream master
            git merge upstream/master --no-edit || true
            git push origin master || true
          fi
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run tests
        run: npm run test
      
      - name: Build Chrome extension
        run: |
          npm run build
          cd dist
          zip -r ../videospeed-chrome.zip .
          cd ..
      
      - name: Build Safari extension
        run: |
          # Safari Web Extension用のmanifest.jsonを作成（manifest v3対応）
          mkdir -p dist-safari
          cp -r dist/* dist-safari/
          
          # Safari Web Extension用にmanifest.jsonを最適化
          cat > dist-safari/manifest.json << 'EOF'
          {
            "name": "Video Speed Controller",
            "short_name": "videospeed",
            "version": "0.9.4",
            "manifest_version": 3,
            "description": "Speed up, slow down, advance and rewind HTML5 audio/video with shortcuts",
            "homepage_url": "https://github.com/igrigorik/videospeed",
            "icons": {
              "16": "assets/icons/icon16.png",
              "48": "assets/icons/icon48.png",
              "128": "assets/icons/icon128.png"
            },
            "permissions": [
              "storage",
              "activeTab"
            ],
            "background": {
              "service_worker": "background.js"
            },
            "options_ui": {
              "page": "ui/options/options.html",
              "open_in_tab": true
            },
            "action": {
              "default_icon": {
                "19": "assets/icons/icon19.png",
                "38": "assets/icons/icon38.png",
                "48": "assets/icons/icon48.png"
              },
              "default_popup": "ui/popup/popup.html"
            },
            "content_scripts": [
              {
                "all_frames": true,
                "matches": [
                  "http://*/*",
                  "https://*/*"
                ],
                "match_about_blank": true,
                "exclude_matches": [
                  "https://hangouts.google.com/*",
                  "https://meet.google.com/*"
                ],
                "css": [
                  "styles/inject.css"
                ],
                "js": [
                  "content.js"
                ]
              }
            ],
            "web_accessible_resources": [
              {
                "resources": [
                  "inject.js"
                ],
                "matches": [
                  "http://*/*",
                  "https://*/*"
                ]
              }
            ]
          }
          EOF
          
          cd dist-safari
          zip -r ../videospeed-safari.zip .
          cd ..
      
      - name: Create Safari DMG
        run: |
          # Safari Web Extension用のシンプルなパッケージを作成
          EXTENSION_NAME="Video Speed Controller Safari Extension"
          
          # DMG用のフォルダ構造を作成
          mkdir -p dmg-temp
          
          # Safari Web Extension フォルダを作成
          mkdir -p "dmg-temp/${EXTENSION_NAME}"
          cp -r dist-safari/* "dmg-temp/${EXTENSION_NAME}/"
          
          # インストール手順を追加
          cat > dmg-temp/README.txt << 'EOF'
          Video Speed Controller for Safari
          ==================================
          
          Installation Instructions:
          
          1. Copy the "Video Speed Controller Safari Extension" folder to your Desktop or Documents
          2. Open Safari
          3. Go to Safari > Preferences > Extensions (or Safari > Settings > Extensions on newer versions)
          4. Click the "+" button or "Load Extension" 
          5. Navigate to and select the "Video Speed Controller Safari Extension" folder
          6. Click "Select Folder" to install the extension
          7. Enable the extension in the list
          
          Alternative Installation (for development):
          1. Enable "Allow Unsigned Extensions" in Safari > Develop menu
          2. Follow steps 2-7 above
          
          Usage:
          - Use keyboard shortcuts to control video speed on any website
          - Default shortcuts: S (slower), D (faster), R (reset), etc.
          - Click the extension icon in Safari's toolbar for options
          
          Supported Websites:
          - YouTube, Netflix, Amazon Prime Video, Apple TV+, Facebook Videos
          - Most HTML5 video players on other websites
          
          Note: This is a Safari Web Extension that works with Safari 14+ on macOS Big Sur or later.
          EOF
          
          # Safari 開発者向けの手順も追加
          cat > "dmg-temp/Developer Instructions.txt" << 'EOF'
          For Developers:
          ===============
          
          To modify or debug this extension:
          
          1. Enable the Develop menu in Safari:
             Safari > Preferences > Advanced > "Show Develop menu in menu bar"
          
          2. Enable unsigned extensions:
             Develop > "Allow Unsigned Extensions"
          
          3. Load the extension as described in README.txt
          
          4. To debug:
             - Right-click on the extension icon > "Inspect Extension"
             - Or go to Develop > Web Extension Background Pages > Video Speed Controller
          
          Extension Structure:
          - manifest.json: Extension configuration
          - content.js: Injected into web pages
          - inject.js: Runs in page context
          - background.js: Background service worker
          - ui/: Popup and options pages
          - assets/: Icons and resources
          EOF
          
          # DMGを作成
          if command -v hdiutil >/dev/null 2>&1; then
              # macOS環境
              hdiutil create -volname "Video Speed Controller" -srcfolder dmg-temp -ov -format UDZO videospeed-safari.dmg
          else
              # Linux環境での代替
              sudo apt-get update && sudo apt-get install -y genisoimage
              genisoimage -o videospeed-safari.dmg -V "Video Speed Controller" -r -J dmg-temp/
          fi
          
          # 一時ファイルを削除
          rm -rf dmg-temp
      
      - name: Get current date
        id: date
        run: echo "date=$(date +'%Y-%m-%d')" >> $GITHUB_OUTPUT
      
      - name: Create Release
        if: inputs.create_release != 'false'
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ needs.check-upstream.outputs.upstream_version }}
          name: Video Speed Controller ${{ needs.check-upstream.outputs.upstream_version }}
          body: |
            ## Video Speed Controller Release ${{ needs.check-upstream.outputs.upstream_version }}
            
            Built on ${{ steps.date.outputs.date }}
            
            ### Downloads
            - **Chrome/Edge**: Download `videospeed-chrome.zip`
            - **Safari (Extension)**: Download `videospeed-safari.zip`
            - **Safari (DMG Installer)**: Download `videospeed-safari.dmg`
            
            ### Installation Instructions
            
            #### Chrome/Edge
            1. Download `videospeed-chrome.zip`
            2. Unzip the file
            3. Open Chrome/Edge and go to `chrome://extensions/` or `edge://extensions/`
            4. Enable "Developer mode"
            5. Click "Load unpacked" and select the unzipped folder
            
            #### Safari (Extension Files)
            1. Download `videospeed-safari.zip`
            2. Unzip the file
            3. Open Safari and go to Safari > Preferences > Extensions
            4. Enable "Allow Unsigned Extensions" (for development)
            5. Load the extension folder
            
            #### Safari (DMG Installer)
            1. Download `videospeed-safari.dmg`
            2. Double-click to mount the disk image
            3. Copy the "Video Speed Controller Safari Extension" folder to your Desktop
            4. Open Safari and go to Safari > Preferences > Extensions
            5. Click the "+" button or "Load Extension"
            6. Navigate to and select the extension folder
            7. Click "Select Folder" and enable the extension
            
            ### Changes
            - Updated to latest upstream version
            - Chrome extension (Manifest V3)
            - Safari extension (Manifest V2)
          files: |
            videospeed-chrome.zip
            videospeed-safari.zip
            videospeed-safari.dmg
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Upload Chrome artifact
        uses: actions/upload-artifact@v4
        with:
          name: videospeed-chrome-${{ needs.check-upstream.outputs.upstream_version }}
          path: videospeed-chrome.zip
          retention-days: 30
      
      - name: Upload Safari artifact
        uses: actions/upload-artifact@v4
        with:
          name: videospeed-safari-${{ needs.check-upstream.outputs.upstream_version }}
          path: videospeed-safari.zip
          retention-days: 30
      
      - name: Upload Safari DMG artifact
        uses: actions/upload-artifact@v4
        with:
          name: videospeed-safari-dmg-${{ needs.check-upstream.outputs.upstream_version }}
          path: videospeed-safari.dmg
          retention-days: 30
