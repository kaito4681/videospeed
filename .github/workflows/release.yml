name: Build and Release

on:
  # 手動実行を可能にする
  workflow_dispatch:
    inputs:
      create_release:
        description: 'Create a new release'
        required: false
        default: true
        type: boolean
  
  # fork元（upstream）の更新を検知
  schedule:
    # 毎日UTC 00:00に実行（日本時間 09:00）
    - cron: '0 0 * * *'
  
  # プッシュ時も実行（タグプッシュ時）
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  actions: read

env:
  NODE_VERSION: '18'

jobs:
  check-upstream:
    name: Check for upstream updates
    runs-on: ubuntu-latest
    outputs:
      should_build: ${{ steps.check.outputs.should_build }}
      upstream_version: ${{ steps.check.outputs.upstream_version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Add upstream remote
        run: |
          git remote add upstream https://github.com/igrigorik/videospeed.git || true
          git fetch upstream master
      
      - name: Check for updates
        id: check
        run: |
          # 手動実行の場合は常にビルド
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "should_build=true" >> $GITHUB_OUTPUT
            echo "upstream_version=manual-$(date +%Y%m%d-%H%M%S)" >> $GITHUB_OUTPUT
            exit 0
          fi
          
          # タグプッシュの場合は常にビルド
          if [ "${{ github.event_name }}" = "push" ] && [[ "${{ github.ref }}" == refs/tags/* ]]; then
            TAG_NAME=${GITHUB_REF#refs/tags/}
            echo "should_build=true" >> $GITHUB_OUTPUT
            echo "upstream_version=$TAG_NAME" >> $GITHUB_OUTPUT
            exit 0
          fi
          
          # upstream/masterの最新コミットハッシュを取得
          UPSTREAM_HASH=$(git rev-parse upstream/master)
          CURRENT_HASH=$(git rev-parse HEAD)
          
          echo "Upstream hash: $UPSTREAM_HASH"
          echo "Current hash: $CURRENT_HASH"
          
          # ハッシュが異なる場合、または前回のビルドから24時間以上経過している場合
          if [ "$UPSTREAM_HASH" != "$CURRENT_HASH" ]; then
            echo "should_build=true" >> $GITHUB_OUTPUT
            # upstream の manifest.json からバージョンを取得
            git show upstream/master:manifest.json > /tmp/upstream_manifest.json
            UPSTREAM_VERSION=$(grep '"version"' /tmp/upstream_manifest.json | sed 's/.*"version": *"\([^"]*\)".*/\1/')
            echo "upstream_version=v$UPSTREAM_VERSION-$(date +%Y%m%d)" >> $GITHUB_OUTPUT
          else
            echo "should_build=false" >> $GITHUB_OUTPUT
          fi

  build-and-release:
    name: Build and Release Extensions
    runs-on: macos-latest  # safari-web-extension-converterを使用するためmacOSが必要
    needs: check-upstream
    if: needs.check-upstream.outputs.should_build == 'true'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Merge upstream changes (if needed)
        run: |
          if [ "${{ github.event_name }}" = "schedule" ]; then
            git remote add upstream https://github.com/igrigorik/videospeed.git || true
            git fetch upstream master
            git merge upstream/master --no-edit || true
            git push origin master || true
          fi
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run tests
        run: npm run test
      
      - name: Build Chrome extension
        run: |
          npm run build
          cd dist
          zip -r ../videospeed-chrome.zip .
          cd ..
      
      - name: Build Safari extension
        run: |
          # Safari Web Extension用のmanifest.jsonを作成（manifest v3対応）
          mkdir -p dist-safari
          cp -r dist/* dist-safari/
          
          # Safari Web Extension用にmanifest.jsonを最適化
          cat > dist-safari/manifest.json << 'EOF'
          {
            "name": "Video Speed Controller",
            "short_name": "videospeed",
            "version": "0.9.4",
            "manifest_version": 3,
            "description": "Speed up, slow down, advance and rewind HTML5 audio/video with shortcuts",
            "homepage_url": "https://github.com/igrigorik/videospeed",
            "icons": {
              "16": "assets/icons/icon16.png",
              "48": "assets/icons/icon48.png",
              "128": "assets/icons/icon128.png"
            },
            "permissions": [
              "storage",
              "activeTab"
            ],
            "background": {
              "service_worker": "background.js"
            },
            "options_ui": {
              "page": "ui/options/options.html",
              "open_in_tab": true
            },
            "action": {
              "default_icon": {
                "19": "assets/icons/icon19.png",
                "38": "assets/icons/icon38.png",
                "48": "assets/icons/icon48.png"
              },
              "default_popup": "ui/popup/popup.html"
            },
            "content_scripts": [
              {
                "all_frames": true,
                "matches": [
                  "http://*/*",
                  "https://*/*"
                ],
                "match_about_blank": true,
                "exclude_matches": [
                  "https://hangouts.google.com/*",
                  "https://meet.google.com/*"
                ],
                "css": [
                  "styles/inject.css"
                ],
                "js": [
                  "content.js"
                ]
              }
            ],
            "web_accessible_resources": [
              {
                "resources": [
                  "inject.js"
                ],
                "matches": [
                  "http://*/*",
                  "https://*/*"
                ]
              }
            ]
          }
          EOF
          
          cd dist-safari
          zip -r ../videospeed-safari.zip .
          cd ..
      
      - name: Create Safari DMG
        run: |
          # xcrun safari-web-extension-converterを使用してSafari Web Extension Appを作成
          
          # Chrome拡張機能からSafari Web Extension Appを作成
          xcrun safari-web-extension-converter dist \
            --project-location ./safari-app \
            --app-name "Video Speed Controller" \
            --bundle-identifier "com.videospeedcontroller.safari" \
            --swift
          
          # 生成されたプロジェクト構造を確認
          echo "Generated project structure:"
          ls -la ./safari-app/
          find ./safari-app -name "*.xcodeproj" -type d
          
          # 生成されたXcodeプロジェクトをビルド
          cd safari-app
          
          # 実際のプロジェクトファイル名を取得
          PROJECT_FILE=$(find . -name "*.xcodeproj" -type d | head -1)
          if [ -z "$PROJECT_FILE" ]; then
            echo "❌ No Xcode project found"
            echo "Available files:"
            find . -type f
            exit 1
          fi
          
          echo "Found project: $PROJECT_FILE"
          
          # Xcodeプロジェクトをビルド（リリースモード）
          xcodebuild -project "$PROJECT_FILE" \
            -scheme "Video Speed Controller" \
            -configuration Release \
            -derivedDataPath ./build \
            DEVELOPMENT_TEAM="" \
            CODE_SIGN_IDENTITY="" \
            CODE_SIGNING_REQUIRED=NO \
            CODE_SIGNING_ALLOWED=NO
          
          # ビルドされたアプリを取得
          APP_PATH="./build/Build/Products/Release/Video Speed Controller.app"
          
          if [ -d "$APP_PATH" ]; then
            # DMGファイルを作成
            cd ..
            mkdir dmg-temp
            cp -r safari-app/"$APP_PATH" dmg-temp/
            
            # インストール手順を追加
            cat > dmg-temp/README.txt << 'EOF'
          Video Speed Controller for Safari
          ==================================
          
          Installation Instructions:
          
          1. Drag "Video Speed Controller.app" to your Applications folder
          2. Double-click the app to launch it
          3. The app will automatically register the Safari extension
          4. Open Safari and go to Safari > Preferences > Extensions
          5. Find "Video Speed Controller" and enable it
          
          Usage:
          - Use keyboard shortcuts to control video speed on any website
          - Default shortcuts: S (slower), D (faster), R (reset), etc.
          - Click the extension icon in Safari's toolbar for options
          
          Note: This app contains a Safari Web Extension and must remain installed
          for the extension to work. The app can run in the background.
          EOF
            
            # Applications フォルダへのショートカットを作成
            ln -s /Applications dmg-temp/Applications
            
            # DMGを作成
            hdiutil create -volname "Video Speed Controller" -srcfolder dmg-temp -ov -format UDZO videospeed-safari.dmg
            
            # 一時ファイルを削除
            rm -rf dmg-temp safari-app
            
            echo "✅ Safari Web Extension App DMG created successfully"
          else
            echo "❌ Failed to build Safari Web Extension App"
            echo "Available files in build directory:"
            find ./build -name "*.app" || echo "No .app files found"
            echo "Full build directory structure:"
            find ./build -type f || echo "Build directory not found"
            exit 1
          fi
      
      - name: Get current date
        id: date
        run: echo "date=$(date +'%Y-%m-%d')" >> $GITHUB_OUTPUT
      
      - name: Create Release
        if: inputs.create_release != 'false'
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ needs.check-upstream.outputs.upstream_version }}
          name: Video Speed Controller ${{ needs.check-upstream.outputs.upstream_version }}
          body: |
            ## Video Speed Controller Release ${{ needs.check-upstream.outputs.upstream_version }}
            
            Built on ${{ steps.date.outputs.date }}
            
            ### Downloads
            - **Chrome/Edge**: Download `videospeed-chrome.zip`
            - **Safari (Extension)**: Download `videospeed-safari.zip`
            - **Safari (DMG Installer)**: Download `videospeed-safari.dmg`
            
            ### Installation Instructions
            
            #### Chrome/Edge
            1. Download `videospeed-chrome.zip`
            2. Unzip the file
            3. Open Chrome/Edge and go to `chrome://extensions/` or `edge://extensions/`
            4. Enable "Developer mode"
            5. Click "Load unpacked" and select the unzipped folder
            
            #### Safari (Extension Files)
            1. Download `videospeed-safari.zip`
            2. Unzip the file
            3. Open Safari and go to Safari > Preferences > Extensions
            4. Enable "Allow Unsigned Extensions" (for development)
            5. Load the extension folder
            
            #### Safari (DMG Installer)
            1. Download `videospeed-safari.dmg`
            2. Double-click to mount the disk image
            3. Drag "Video Speed Controller.app" to your Applications folder
            4. Double-click the app to launch it (this registers the extension)
            5. Open Safari and go to Safari > Preferences > Extensions
            6. Find "Video Speed Controller" and enable it
            
            ### Changes
            - Updated to latest upstream version
            - Chrome extension (Manifest V3)
            - Safari Web Extension App (automatically generated from Chrome extension)
          files: |
            videospeed-chrome.zip
            videospeed-safari.zip
            videospeed-safari.dmg
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Upload Chrome artifact
        uses: actions/upload-artifact@v4
        with:
          name: videospeed-chrome-${{ needs.check-upstream.outputs.upstream_version }}
          path: videospeed-chrome.zip
          retention-days: 30
      
      - name: Upload Safari artifact
        uses: actions/upload-artifact@v4
        with:
          name: videospeed-safari-${{ needs.check-upstream.outputs.upstream_version }}
          path: videospeed-safari.zip
          retention-days: 30
      
      - name: Upload Safari DMG artifact
        uses: actions/upload-artifact@v4
        with:
          name: videospeed-safari-dmg-${{ needs.check-upstream.outputs.upstream_version }}
          path: videospeed-safari.dmg
          retention-days: 30
